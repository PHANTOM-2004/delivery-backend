services:
  mariadb:
    image: mariadb:lts
    container_name: test_mariadb
    environment:
      MYSQL_ROOT_PASSWORD: woshinidie
      # 我们默认使用的数据库是TJ_SE
      MYSQL_DATABASE: TJ_SE
      # 默认用户scarlet
      MYSQL_USER: scarlet
      # 默认密码2252707
      MYSQL_PASSWORD: 2252707
    volumes:
      - test_mariadb_data:/var/lib/mysql
      # 初始化db, 创建需要的表
      - ../../scripts/db:/docker-entrypoint-initdb.d

  redis:
    image: redis:alpine
    container_name: test_redis
    volumes:
      - test_redis_data:/data

  nginx:
    image: nginx:mainline-alpine-slim
    depends_on:
      - go_service
      - vue_service
    container_name: test_nginx
    ports:
      # 暴露443端口, used by https
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # 挂载 Nginx 配置文件
      # 挂载 SSL 证书
      - ../../localhost-cert.pem:/etc/nginx/certs/localhost-cert.pem:ro
      - ../../localhost-key.pem:/etc/nginx/certs/localhost-key.pem:ro
    working_dir: /etc/nginx

  vue_service:
    tty: true
    image: node:alpine
    container_name: test_vite_service
    environment:
      # 设置npm源
      NPM_CONFIG_REGISTRY: https://registry.npmmirror.com
    volumes:
      # 挂载对应的项目根目录
      # ../../ 是后端项目根目录
      - ../../../delivery-adminpanel:/AdminPanel
      # 工作目录也就是项目目录
    working_dir: /AdminPanel
    command: sh -c "npm install && npm run dev"

  go_service:
    #为了让bash能够正常运行
    tty: true
    # 直接考虑改用golang官方镜像,不再使用fedora
    image: golang:latest
    container_name: test_go_service
    environment:
      # go的代理
      GOPROXY: "https://goproxy.cn,direct"
      PROJECT: /home/Projects
    depends_on:
      - mariadb
      - redis
    # 默认工作区为项目目录
    working_dir: /home/Projects
    volumes:
      #这里默认直接把项目根目录挂载
      - ../../:/home/Projects
      # 例：./myapp:/app  # 将主机的 myapp 目录挂载到容器的 /app
      # 注意修改这里的挂载目录，直接把本地的目录挂载过去,就不需要在容器内部clone
      - test_go_cache:/go/pkg/mod # 缓存go cache快速启动

volumes:
  test_mariadb_data:
  test_redis_data:
  test_go_cache:
