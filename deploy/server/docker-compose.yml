services:
  mariadb:
    image: mariadb:lts
    container_name: test_mariadb
    # https://mariadb.com/kb/en/using-healthcheck-sh/
    # 添加连接状态检查
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      MYSQL_ROOT_PASSWORD: woshinidie
      # 我们默认使用的数据库是TJ_SE
      MYSQL_DATABASE: TJ_SE
      # 默认用户scarlet
      MYSQL_USER: scarlet
      # 默认密码2252707
      MYSQL_PASSWORD: 2252707
    volumes:
      - test_mariadb_data:/var/lib/mysql

  redis:
    image: redis:alpine
    container_name: test_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 10s
      interval: 20s
      timeout: 5s
      retries: 5
    # volumes:
    #   - test_redis_data:/data

  rabbitmq:
    image: rabbitmq:alpine
    container_name: test_rabbitmq
    healthcheck:
      # use the flag --erlang-cookie if setting the erlang
      # cookie was necessary (comment by red-riding-hood)
      # test: rabbitmq-diagnostics -q ping --erlang-cookie "mycookie"
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  nginx:
    image: nginx:mainline-alpine-slim
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - go_service
    container_name: test_nginx
    ports:
      # 暴露443端口, used by https
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # 挂载 Nginx 配置文件
      # 挂载 SSL 证书
      - ../../hwcloud-cert.pem:/etc/nginx/certs/hwcloud-cert.pem:ro
      - ../../hwcloud-key.pem:/etc/nginx/certs/hwcloud-key.pem:ro
    working_dir: /etc/nginx

  go_service:
    #为了让bash能够正常运行
    tty: true
    # 直接考虑改用golang官方镜像,不再使用fedora
    image: golang:latest
    container_name: test_go_service
    environment:
      # go的代理
      GOPROXY: "https://goproxy.cn,direct"
      PROJECT: /home/Projects
      # project env for make
      GO_SERVICE_ENV: DOCKER_DEPLOY
    depends_on:
      # 添加容器的healthcheck
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

    # 默认工作区为项目目录
    working_dir: /home/Projects
    command: ["sh", "-c", "chmod +x /home/Projects/scripts/*.sh && make"]
    volumes:
      #这里默认直接把项目根目录挂载
      - ../../:/home/Projects
      # 例：./myapp:/app  # 将主机的 myapp 目录挂载到容器的 /app
      # 注意修改这里的挂载目录，直接把本地的目录挂载过去,就不需要在容器内部clone
      - test_go_cache:/go/pkg/mod # 缓存go cache快速启动

volumes:
  # 设置mariadb的持久卷
  test_mariadb_data:
  # test_redis_data:
  test_go_cache:
